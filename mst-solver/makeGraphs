#!/usr/bin/env python


from nodex import Nodex
from nodex import Graph
import names

edgeWeight = 16.0
nextNodeID = 0.0

graph = Graph("gen_graph")

from optparse import OptionParser

usage = "usage: %prog [options] arg"
parser = OptionParser(usage)
parser.add_option("-f", "--file", dest="filename", help="read data from FILENAME")
parser.add_option("-n", "--nodes", dest="numNodes", help="number of nodes in graph")

(options, args) = parser.parse_args()


for i in range(int(options.numNodes)):
    print(i)
    parentNode = Nodex(names.get_first_name(), nextNodeID)
    if i != 0:
        lastNode.addNegihbor(parentNode)
        parentNode.addNegihbor(lastNode)
    lastNode = parentNode
    nextNodeID+=1
    graph.addNode(parentNode)
    if i % 4 == 0:
        print("adding 4 nodes")
        for j in range(4):
            node = Nodex(names.get_first_name(), nextNodeID)
            node.home = True
            nextNodeID += 1
            print("adding {}".format(node.name))
            graph.addNode(node)
            parentNode.addNegihbor(node)
            node.addNegihbor(parentNode)
    elif i % 4 == 1:
        current = parentNode
        for j in range(3):
            node = Nodex(names.get_first_name(), nextNodeID)
            node.home = True
            nextNodeID += 1
            graph.addNode(node)
            current.addNegihbor(node)
            node.addNegihbor(current)
            current = node
    elif i % 4 == 2:
        current = parentNode
        for j in range(2):
            node = Nodex(names.get_first_name(), nextNodeID)
            node.home = True
            nextNodeID += 1
            graph.addNode(node)
            current.addNegihbor(node)
            node.addNegihbor(current)
            current = node
    else:
        node = Nodex(names.get_first_name(), nextNodeID)
        node.home = True
        nextNodeID += 1
        graph.addNode(node)
        parentNode.addNegihbor(node)
        node.addNegihbor(parentNode)


graph.printGraph()